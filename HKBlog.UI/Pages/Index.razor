@page "/"
@inject NavigationManager navManager
@inject IEncryptionHelper encHelper
@inject IAccountController accountController
@inject IStore store
@implements IDisposable

<ProductView/>

@code {
    protected override void OnInitialized()
    {
        GetAllWalletInformation();
        store.AddStateChangedListeners(() => { StateHasChanged(); });
    }
    public async void GetAllWalletInformation()
    {
        List<Wallet> allWallets = (await accountController.GetAndDecryptAllEncryptedData<Wallet>(DataFrom.wallet));
        List<AccountNotification>  walletNotifications = (await accountController.GetAccountNotifications("admin")).OrderByDescending(x => x.Date).ToList();
        store.UpdateWalletsInformation(allWallets, walletNotifications);
    }
    public void Dispose()
    {
        store.RemoveStateChangedListeners(() => { StateHasChanged(); });
    }
        /*
         * Debug entire application before release
         * Try best to fix uploading bug
         * <i class="fas fa-hourglass-end"></i> use this to denote product out of stock
         * Work on users setting delivery address and adding logistic fees on cart page
         * Work on incorporating multiple images and product video, ask GPT before incorporating
         * Make research on Video enhancers as advised by abdisamad
         * Add a concrete inventory and statistic management with chart
         * If necessary, make a statistic chart for dispatched products
         * Enable UserCookie() after app debug series
         */
}



